# Makefile.in generated by automake 1.10.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = altSpliceFinder$(EXEEXT)
subdir = src
DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.hpp
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
libAltSplicing_a_AR = $(AR) $(ARFLAGS)
libAltSplicing_a_LIBADD =
am_libAltSplicing_a_OBJECTS = libAltSplicing_a-GeneFeature.$(OBJEXT) \
	libAltSplicing_a-SplicingEventMatrix.$(OBJEXT) \
	libAltSplicing_a-Transcript.$(OBJEXT) \
	libAltSplicing_a-Feature.$(OBJEXT) \
	libAltSplicing_a-Coordinates.$(OBJEXT) \
	libAltSplicing_a-SplicingEventContainer.$(OBJEXT) \
	libAltSplicing_a-TranscriptFeature.$(OBJEXT) \
	libAltSplicing_a-Gene.$(OBJEXT) \
	libAltSplicing_a-SplicingEvent.$(OBJEXT) \
	libAltSplicing_a-RegionChunk.$(OBJEXT) \
	libAltSplicing_a-ExonChunk.$(OBJEXT) \
	libAltSplicing_a-BioMartGffHandler.$(OBJEXT) \
	libAltSplicing_a-GffParser.$(OBJEXT) \
	libAltSplicing_a-SplicingEventGffGenerator.$(OBJEXT) \
	libAltSplicing_a-GffEventModel.$(OBJEXT) \
	libAltSplicing_a-GffSimpleHandler.$(OBJEXT) \
	libAltSplicing_a-StringUtil.$(OBJEXT) \
	libAltSplicing_a-Logger.$(OBJEXT)
libAltSplicing_a_OBJECTS = $(am_libAltSplicing_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_altSpliceFinder_OBJECTS = altSpliceFinder-Main.$(OBJEXT)
altSpliceFinder_OBJECTS = $(am_altSpliceFinder_OBJECTS)
altSpliceFinder_LDADD = $(LDADD)
altSpliceFinder_DEPENDENCIES =
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libAltSplicing_a_SOURCES) $(altSpliceFinder_SOURCES)
DIST_SOURCES = $(libAltSplicing_a_SOURCES) $(altSpliceFinder_SOURCES)
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
ARFLAGS = @ARFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISODATE = @ISODATE@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
bin_CPPFLAGS = -L@top_srcdir@/src
LDADD = -lAltSplicing -lm
altSpliceFinder_SOURCES = Main.cpp Constants.h
altSpliceFinder_CPPFLAGS = -L@top_srcdir@/src

# general use to compile individuals objects
AM_CPPFLAGS = -I@top_srcdir@/src -L@top_srcdir@/src

# -------------------------------
# AltSplicingToolkit library configuration
# -------------------------------
lib_LIBRARIES = libAltSplicing.a
libAltSplicing_a_SOURCES = \
	as/GeneFeature.cpp\
	as/SplicingEventMatrix.cpp\
	as/Transcript.cpp\
	as/Feature.cpp\
	as/Coordinates.cpp\
	as/SplicingEventContainer.cpp\
	as/TranscriptFeature.cpp\
	as/Gene.cpp\
	as/SplicingEvent.cpp\
	as/RegionChunk.cpp\
	as/ExonChunk.cpp\
	gff/BioMartGffHandler.cpp\
	gff/GffParser.cpp\
	gff/SplicingEventGffGenerator.cpp\
	gff/GffEventModel.cpp\
	gff/GffSimpleHandler.cpp\
	util/StringUtil.cpp\
	util/Logger.cpp

libAltSplicing_a_CPPFLAGS = $(AM_CPPFLAGS)

# -------------------------------
# AltSplicingToolkit package distribution
# -------------------------------
pkginclude_HEADERS = \
	as/Coordinates.h\
	as/GeneFeature.h\
	as/SplicingEventMatrix.h\
	as/Transcript.h\
	as/Feature.h\
	as/SplicingEventContainer.h\
	as/TranscriptFeature.h\
	as/Gene.h\
	as/SplicingEvent.h\
	as/RegionChunk.h\
	as/ExonChunk.h\
	gff/BioMartGffHandler.h\
	gff/GffParser.h\
	gff/SplicingEventGffGenerator.h\
	gff/GffEventModel.h\
	gff/GffSimpleHandler.h\
	util/StringUtil.h

EXTRA_DIST = $(pkginclude_HEADERS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libAltSplicing.a: $(libAltSplicing_a_OBJECTS) $(libAltSplicing_a_DEPENDENCIES) 
	-rm -f libAltSplicing.a
	$(libAltSplicing_a_AR) libAltSplicing.a $(libAltSplicing_a_OBJECTS) $(libAltSplicing_a_LIBADD)
	$(RANLIB) libAltSplicing.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
altSpliceFinder$(EXEEXT): $(altSpliceFinder_OBJECTS) $(altSpliceFinder_DEPENDENCIES) 
	@rm -f altSpliceFinder$(EXEEXT)
	$(CXXLINK) $(altSpliceFinder_OBJECTS) $(altSpliceFinder_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/altSpliceFinder-Main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-BioMartGffHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-Coordinates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-ExonChunk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-Feature.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-Gene.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-GeneFeature.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-GffEventModel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-GffParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-GffSimpleHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-Logger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-RegionChunk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-SplicingEvent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-SplicingEventContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-SplicingEventGffGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-SplicingEventMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-StringUtil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-Transcript.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libAltSplicing_a-TranscriptFeature.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libAltSplicing_a-GeneFeature.o: as/GeneFeature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-GeneFeature.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-GeneFeature.Tpo -c -o libAltSplicing_a-GeneFeature.o `test -f 'as/GeneFeature.cpp' || echo '$(srcdir)/'`as/GeneFeature.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-GeneFeature.Tpo $(DEPDIR)/libAltSplicing_a-GeneFeature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/GeneFeature.cpp' object='libAltSplicing_a-GeneFeature.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-GeneFeature.o `test -f 'as/GeneFeature.cpp' || echo '$(srcdir)/'`as/GeneFeature.cpp

libAltSplicing_a-GeneFeature.obj: as/GeneFeature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-GeneFeature.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-GeneFeature.Tpo -c -o libAltSplicing_a-GeneFeature.obj `if test -f 'as/GeneFeature.cpp'; then $(CYGPATH_W) 'as/GeneFeature.cpp'; else $(CYGPATH_W) '$(srcdir)/as/GeneFeature.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-GeneFeature.Tpo $(DEPDIR)/libAltSplicing_a-GeneFeature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/GeneFeature.cpp' object='libAltSplicing_a-GeneFeature.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-GeneFeature.obj `if test -f 'as/GeneFeature.cpp'; then $(CYGPATH_W) 'as/GeneFeature.cpp'; else $(CYGPATH_W) '$(srcdir)/as/GeneFeature.cpp'; fi`

libAltSplicing_a-SplicingEventMatrix.o: as/SplicingEventMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-SplicingEventMatrix.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-SplicingEventMatrix.Tpo -c -o libAltSplicing_a-SplicingEventMatrix.o `test -f 'as/SplicingEventMatrix.cpp' || echo '$(srcdir)/'`as/SplicingEventMatrix.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-SplicingEventMatrix.Tpo $(DEPDIR)/libAltSplicing_a-SplicingEventMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/SplicingEventMatrix.cpp' object='libAltSplicing_a-SplicingEventMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-SplicingEventMatrix.o `test -f 'as/SplicingEventMatrix.cpp' || echo '$(srcdir)/'`as/SplicingEventMatrix.cpp

libAltSplicing_a-SplicingEventMatrix.obj: as/SplicingEventMatrix.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-SplicingEventMatrix.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-SplicingEventMatrix.Tpo -c -o libAltSplicing_a-SplicingEventMatrix.obj `if test -f 'as/SplicingEventMatrix.cpp'; then $(CYGPATH_W) 'as/SplicingEventMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/as/SplicingEventMatrix.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-SplicingEventMatrix.Tpo $(DEPDIR)/libAltSplicing_a-SplicingEventMatrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/SplicingEventMatrix.cpp' object='libAltSplicing_a-SplicingEventMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-SplicingEventMatrix.obj `if test -f 'as/SplicingEventMatrix.cpp'; then $(CYGPATH_W) 'as/SplicingEventMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/as/SplicingEventMatrix.cpp'; fi`

libAltSplicing_a-Transcript.o: as/Transcript.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-Transcript.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-Transcript.Tpo -c -o libAltSplicing_a-Transcript.o `test -f 'as/Transcript.cpp' || echo '$(srcdir)/'`as/Transcript.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-Transcript.Tpo $(DEPDIR)/libAltSplicing_a-Transcript.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/Transcript.cpp' object='libAltSplicing_a-Transcript.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-Transcript.o `test -f 'as/Transcript.cpp' || echo '$(srcdir)/'`as/Transcript.cpp

libAltSplicing_a-Transcript.obj: as/Transcript.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-Transcript.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-Transcript.Tpo -c -o libAltSplicing_a-Transcript.obj `if test -f 'as/Transcript.cpp'; then $(CYGPATH_W) 'as/Transcript.cpp'; else $(CYGPATH_W) '$(srcdir)/as/Transcript.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-Transcript.Tpo $(DEPDIR)/libAltSplicing_a-Transcript.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/Transcript.cpp' object='libAltSplicing_a-Transcript.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-Transcript.obj `if test -f 'as/Transcript.cpp'; then $(CYGPATH_W) 'as/Transcript.cpp'; else $(CYGPATH_W) '$(srcdir)/as/Transcript.cpp'; fi`

libAltSplicing_a-Feature.o: as/Feature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-Feature.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-Feature.Tpo -c -o libAltSplicing_a-Feature.o `test -f 'as/Feature.cpp' || echo '$(srcdir)/'`as/Feature.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-Feature.Tpo $(DEPDIR)/libAltSplicing_a-Feature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/Feature.cpp' object='libAltSplicing_a-Feature.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-Feature.o `test -f 'as/Feature.cpp' || echo '$(srcdir)/'`as/Feature.cpp

libAltSplicing_a-Feature.obj: as/Feature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-Feature.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-Feature.Tpo -c -o libAltSplicing_a-Feature.obj `if test -f 'as/Feature.cpp'; then $(CYGPATH_W) 'as/Feature.cpp'; else $(CYGPATH_W) '$(srcdir)/as/Feature.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-Feature.Tpo $(DEPDIR)/libAltSplicing_a-Feature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/Feature.cpp' object='libAltSplicing_a-Feature.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-Feature.obj `if test -f 'as/Feature.cpp'; then $(CYGPATH_W) 'as/Feature.cpp'; else $(CYGPATH_W) '$(srcdir)/as/Feature.cpp'; fi`

libAltSplicing_a-Coordinates.o: as/Coordinates.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-Coordinates.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-Coordinates.Tpo -c -o libAltSplicing_a-Coordinates.o `test -f 'as/Coordinates.cpp' || echo '$(srcdir)/'`as/Coordinates.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-Coordinates.Tpo $(DEPDIR)/libAltSplicing_a-Coordinates.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/Coordinates.cpp' object='libAltSplicing_a-Coordinates.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-Coordinates.o `test -f 'as/Coordinates.cpp' || echo '$(srcdir)/'`as/Coordinates.cpp

libAltSplicing_a-Coordinates.obj: as/Coordinates.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-Coordinates.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-Coordinates.Tpo -c -o libAltSplicing_a-Coordinates.obj `if test -f 'as/Coordinates.cpp'; then $(CYGPATH_W) 'as/Coordinates.cpp'; else $(CYGPATH_W) '$(srcdir)/as/Coordinates.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-Coordinates.Tpo $(DEPDIR)/libAltSplicing_a-Coordinates.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/Coordinates.cpp' object='libAltSplicing_a-Coordinates.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-Coordinates.obj `if test -f 'as/Coordinates.cpp'; then $(CYGPATH_W) 'as/Coordinates.cpp'; else $(CYGPATH_W) '$(srcdir)/as/Coordinates.cpp'; fi`

libAltSplicing_a-SplicingEventContainer.o: as/SplicingEventContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-SplicingEventContainer.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-SplicingEventContainer.Tpo -c -o libAltSplicing_a-SplicingEventContainer.o `test -f 'as/SplicingEventContainer.cpp' || echo '$(srcdir)/'`as/SplicingEventContainer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-SplicingEventContainer.Tpo $(DEPDIR)/libAltSplicing_a-SplicingEventContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/SplicingEventContainer.cpp' object='libAltSplicing_a-SplicingEventContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-SplicingEventContainer.o `test -f 'as/SplicingEventContainer.cpp' || echo '$(srcdir)/'`as/SplicingEventContainer.cpp

libAltSplicing_a-SplicingEventContainer.obj: as/SplicingEventContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-SplicingEventContainer.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-SplicingEventContainer.Tpo -c -o libAltSplicing_a-SplicingEventContainer.obj `if test -f 'as/SplicingEventContainer.cpp'; then $(CYGPATH_W) 'as/SplicingEventContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/as/SplicingEventContainer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-SplicingEventContainer.Tpo $(DEPDIR)/libAltSplicing_a-SplicingEventContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/SplicingEventContainer.cpp' object='libAltSplicing_a-SplicingEventContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-SplicingEventContainer.obj `if test -f 'as/SplicingEventContainer.cpp'; then $(CYGPATH_W) 'as/SplicingEventContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/as/SplicingEventContainer.cpp'; fi`

libAltSplicing_a-TranscriptFeature.o: as/TranscriptFeature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-TranscriptFeature.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-TranscriptFeature.Tpo -c -o libAltSplicing_a-TranscriptFeature.o `test -f 'as/TranscriptFeature.cpp' || echo '$(srcdir)/'`as/TranscriptFeature.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-TranscriptFeature.Tpo $(DEPDIR)/libAltSplicing_a-TranscriptFeature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/TranscriptFeature.cpp' object='libAltSplicing_a-TranscriptFeature.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-TranscriptFeature.o `test -f 'as/TranscriptFeature.cpp' || echo '$(srcdir)/'`as/TranscriptFeature.cpp

libAltSplicing_a-TranscriptFeature.obj: as/TranscriptFeature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-TranscriptFeature.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-TranscriptFeature.Tpo -c -o libAltSplicing_a-TranscriptFeature.obj `if test -f 'as/TranscriptFeature.cpp'; then $(CYGPATH_W) 'as/TranscriptFeature.cpp'; else $(CYGPATH_W) '$(srcdir)/as/TranscriptFeature.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-TranscriptFeature.Tpo $(DEPDIR)/libAltSplicing_a-TranscriptFeature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/TranscriptFeature.cpp' object='libAltSplicing_a-TranscriptFeature.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-TranscriptFeature.obj `if test -f 'as/TranscriptFeature.cpp'; then $(CYGPATH_W) 'as/TranscriptFeature.cpp'; else $(CYGPATH_W) '$(srcdir)/as/TranscriptFeature.cpp'; fi`

libAltSplicing_a-Gene.o: as/Gene.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-Gene.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-Gene.Tpo -c -o libAltSplicing_a-Gene.o `test -f 'as/Gene.cpp' || echo '$(srcdir)/'`as/Gene.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-Gene.Tpo $(DEPDIR)/libAltSplicing_a-Gene.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/Gene.cpp' object='libAltSplicing_a-Gene.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-Gene.o `test -f 'as/Gene.cpp' || echo '$(srcdir)/'`as/Gene.cpp

libAltSplicing_a-Gene.obj: as/Gene.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-Gene.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-Gene.Tpo -c -o libAltSplicing_a-Gene.obj `if test -f 'as/Gene.cpp'; then $(CYGPATH_W) 'as/Gene.cpp'; else $(CYGPATH_W) '$(srcdir)/as/Gene.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-Gene.Tpo $(DEPDIR)/libAltSplicing_a-Gene.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/Gene.cpp' object='libAltSplicing_a-Gene.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-Gene.obj `if test -f 'as/Gene.cpp'; then $(CYGPATH_W) 'as/Gene.cpp'; else $(CYGPATH_W) '$(srcdir)/as/Gene.cpp'; fi`

libAltSplicing_a-SplicingEvent.o: as/SplicingEvent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-SplicingEvent.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-SplicingEvent.Tpo -c -o libAltSplicing_a-SplicingEvent.o `test -f 'as/SplicingEvent.cpp' || echo '$(srcdir)/'`as/SplicingEvent.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-SplicingEvent.Tpo $(DEPDIR)/libAltSplicing_a-SplicingEvent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/SplicingEvent.cpp' object='libAltSplicing_a-SplicingEvent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-SplicingEvent.o `test -f 'as/SplicingEvent.cpp' || echo '$(srcdir)/'`as/SplicingEvent.cpp

libAltSplicing_a-SplicingEvent.obj: as/SplicingEvent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-SplicingEvent.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-SplicingEvent.Tpo -c -o libAltSplicing_a-SplicingEvent.obj `if test -f 'as/SplicingEvent.cpp'; then $(CYGPATH_W) 'as/SplicingEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/as/SplicingEvent.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-SplicingEvent.Tpo $(DEPDIR)/libAltSplicing_a-SplicingEvent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/SplicingEvent.cpp' object='libAltSplicing_a-SplicingEvent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-SplicingEvent.obj `if test -f 'as/SplicingEvent.cpp'; then $(CYGPATH_W) 'as/SplicingEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/as/SplicingEvent.cpp'; fi`

libAltSplicing_a-RegionChunk.o: as/RegionChunk.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-RegionChunk.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-RegionChunk.Tpo -c -o libAltSplicing_a-RegionChunk.o `test -f 'as/RegionChunk.cpp' || echo '$(srcdir)/'`as/RegionChunk.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-RegionChunk.Tpo $(DEPDIR)/libAltSplicing_a-RegionChunk.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/RegionChunk.cpp' object='libAltSplicing_a-RegionChunk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-RegionChunk.o `test -f 'as/RegionChunk.cpp' || echo '$(srcdir)/'`as/RegionChunk.cpp

libAltSplicing_a-RegionChunk.obj: as/RegionChunk.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-RegionChunk.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-RegionChunk.Tpo -c -o libAltSplicing_a-RegionChunk.obj `if test -f 'as/RegionChunk.cpp'; then $(CYGPATH_W) 'as/RegionChunk.cpp'; else $(CYGPATH_W) '$(srcdir)/as/RegionChunk.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-RegionChunk.Tpo $(DEPDIR)/libAltSplicing_a-RegionChunk.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/RegionChunk.cpp' object='libAltSplicing_a-RegionChunk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-RegionChunk.obj `if test -f 'as/RegionChunk.cpp'; then $(CYGPATH_W) 'as/RegionChunk.cpp'; else $(CYGPATH_W) '$(srcdir)/as/RegionChunk.cpp'; fi`

libAltSplicing_a-ExonChunk.o: as/ExonChunk.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-ExonChunk.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-ExonChunk.Tpo -c -o libAltSplicing_a-ExonChunk.o `test -f 'as/ExonChunk.cpp' || echo '$(srcdir)/'`as/ExonChunk.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-ExonChunk.Tpo $(DEPDIR)/libAltSplicing_a-ExonChunk.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/ExonChunk.cpp' object='libAltSplicing_a-ExonChunk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-ExonChunk.o `test -f 'as/ExonChunk.cpp' || echo '$(srcdir)/'`as/ExonChunk.cpp

libAltSplicing_a-ExonChunk.obj: as/ExonChunk.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-ExonChunk.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-ExonChunk.Tpo -c -o libAltSplicing_a-ExonChunk.obj `if test -f 'as/ExonChunk.cpp'; then $(CYGPATH_W) 'as/ExonChunk.cpp'; else $(CYGPATH_W) '$(srcdir)/as/ExonChunk.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-ExonChunk.Tpo $(DEPDIR)/libAltSplicing_a-ExonChunk.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='as/ExonChunk.cpp' object='libAltSplicing_a-ExonChunk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-ExonChunk.obj `if test -f 'as/ExonChunk.cpp'; then $(CYGPATH_W) 'as/ExonChunk.cpp'; else $(CYGPATH_W) '$(srcdir)/as/ExonChunk.cpp'; fi`

libAltSplicing_a-BioMartGffHandler.o: gff/BioMartGffHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-BioMartGffHandler.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-BioMartGffHandler.Tpo -c -o libAltSplicing_a-BioMartGffHandler.o `test -f 'gff/BioMartGffHandler.cpp' || echo '$(srcdir)/'`gff/BioMartGffHandler.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-BioMartGffHandler.Tpo $(DEPDIR)/libAltSplicing_a-BioMartGffHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gff/BioMartGffHandler.cpp' object='libAltSplicing_a-BioMartGffHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-BioMartGffHandler.o `test -f 'gff/BioMartGffHandler.cpp' || echo '$(srcdir)/'`gff/BioMartGffHandler.cpp

libAltSplicing_a-BioMartGffHandler.obj: gff/BioMartGffHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-BioMartGffHandler.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-BioMartGffHandler.Tpo -c -o libAltSplicing_a-BioMartGffHandler.obj `if test -f 'gff/BioMartGffHandler.cpp'; then $(CYGPATH_W) 'gff/BioMartGffHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/gff/BioMartGffHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-BioMartGffHandler.Tpo $(DEPDIR)/libAltSplicing_a-BioMartGffHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gff/BioMartGffHandler.cpp' object='libAltSplicing_a-BioMartGffHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-BioMartGffHandler.obj `if test -f 'gff/BioMartGffHandler.cpp'; then $(CYGPATH_W) 'gff/BioMartGffHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/gff/BioMartGffHandler.cpp'; fi`

libAltSplicing_a-GffParser.o: gff/GffParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-GffParser.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-GffParser.Tpo -c -o libAltSplicing_a-GffParser.o `test -f 'gff/GffParser.cpp' || echo '$(srcdir)/'`gff/GffParser.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-GffParser.Tpo $(DEPDIR)/libAltSplicing_a-GffParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gff/GffParser.cpp' object='libAltSplicing_a-GffParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-GffParser.o `test -f 'gff/GffParser.cpp' || echo '$(srcdir)/'`gff/GffParser.cpp

libAltSplicing_a-GffParser.obj: gff/GffParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-GffParser.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-GffParser.Tpo -c -o libAltSplicing_a-GffParser.obj `if test -f 'gff/GffParser.cpp'; then $(CYGPATH_W) 'gff/GffParser.cpp'; else $(CYGPATH_W) '$(srcdir)/gff/GffParser.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-GffParser.Tpo $(DEPDIR)/libAltSplicing_a-GffParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gff/GffParser.cpp' object='libAltSplicing_a-GffParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-GffParser.obj `if test -f 'gff/GffParser.cpp'; then $(CYGPATH_W) 'gff/GffParser.cpp'; else $(CYGPATH_W) '$(srcdir)/gff/GffParser.cpp'; fi`

libAltSplicing_a-SplicingEventGffGenerator.o: gff/SplicingEventGffGenerator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-SplicingEventGffGenerator.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-SplicingEventGffGenerator.Tpo -c -o libAltSplicing_a-SplicingEventGffGenerator.o `test -f 'gff/SplicingEventGffGenerator.cpp' || echo '$(srcdir)/'`gff/SplicingEventGffGenerator.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-SplicingEventGffGenerator.Tpo $(DEPDIR)/libAltSplicing_a-SplicingEventGffGenerator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gff/SplicingEventGffGenerator.cpp' object='libAltSplicing_a-SplicingEventGffGenerator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-SplicingEventGffGenerator.o `test -f 'gff/SplicingEventGffGenerator.cpp' || echo '$(srcdir)/'`gff/SplicingEventGffGenerator.cpp

libAltSplicing_a-SplicingEventGffGenerator.obj: gff/SplicingEventGffGenerator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-SplicingEventGffGenerator.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-SplicingEventGffGenerator.Tpo -c -o libAltSplicing_a-SplicingEventGffGenerator.obj `if test -f 'gff/SplicingEventGffGenerator.cpp'; then $(CYGPATH_W) 'gff/SplicingEventGffGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/gff/SplicingEventGffGenerator.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-SplicingEventGffGenerator.Tpo $(DEPDIR)/libAltSplicing_a-SplicingEventGffGenerator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gff/SplicingEventGffGenerator.cpp' object='libAltSplicing_a-SplicingEventGffGenerator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-SplicingEventGffGenerator.obj `if test -f 'gff/SplicingEventGffGenerator.cpp'; then $(CYGPATH_W) 'gff/SplicingEventGffGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/gff/SplicingEventGffGenerator.cpp'; fi`

libAltSplicing_a-GffEventModel.o: gff/GffEventModel.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-GffEventModel.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-GffEventModel.Tpo -c -o libAltSplicing_a-GffEventModel.o `test -f 'gff/GffEventModel.cpp' || echo '$(srcdir)/'`gff/GffEventModel.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-GffEventModel.Tpo $(DEPDIR)/libAltSplicing_a-GffEventModel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gff/GffEventModel.cpp' object='libAltSplicing_a-GffEventModel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-GffEventModel.o `test -f 'gff/GffEventModel.cpp' || echo '$(srcdir)/'`gff/GffEventModel.cpp

libAltSplicing_a-GffEventModel.obj: gff/GffEventModel.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-GffEventModel.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-GffEventModel.Tpo -c -o libAltSplicing_a-GffEventModel.obj `if test -f 'gff/GffEventModel.cpp'; then $(CYGPATH_W) 'gff/GffEventModel.cpp'; else $(CYGPATH_W) '$(srcdir)/gff/GffEventModel.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-GffEventModel.Tpo $(DEPDIR)/libAltSplicing_a-GffEventModel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gff/GffEventModel.cpp' object='libAltSplicing_a-GffEventModel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-GffEventModel.obj `if test -f 'gff/GffEventModel.cpp'; then $(CYGPATH_W) 'gff/GffEventModel.cpp'; else $(CYGPATH_W) '$(srcdir)/gff/GffEventModel.cpp'; fi`

libAltSplicing_a-GffSimpleHandler.o: gff/GffSimpleHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-GffSimpleHandler.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-GffSimpleHandler.Tpo -c -o libAltSplicing_a-GffSimpleHandler.o `test -f 'gff/GffSimpleHandler.cpp' || echo '$(srcdir)/'`gff/GffSimpleHandler.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-GffSimpleHandler.Tpo $(DEPDIR)/libAltSplicing_a-GffSimpleHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gff/GffSimpleHandler.cpp' object='libAltSplicing_a-GffSimpleHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-GffSimpleHandler.o `test -f 'gff/GffSimpleHandler.cpp' || echo '$(srcdir)/'`gff/GffSimpleHandler.cpp

libAltSplicing_a-GffSimpleHandler.obj: gff/GffSimpleHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-GffSimpleHandler.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-GffSimpleHandler.Tpo -c -o libAltSplicing_a-GffSimpleHandler.obj `if test -f 'gff/GffSimpleHandler.cpp'; then $(CYGPATH_W) 'gff/GffSimpleHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/gff/GffSimpleHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-GffSimpleHandler.Tpo $(DEPDIR)/libAltSplicing_a-GffSimpleHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gff/GffSimpleHandler.cpp' object='libAltSplicing_a-GffSimpleHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-GffSimpleHandler.obj `if test -f 'gff/GffSimpleHandler.cpp'; then $(CYGPATH_W) 'gff/GffSimpleHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/gff/GffSimpleHandler.cpp'; fi`

libAltSplicing_a-StringUtil.o: util/StringUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-StringUtil.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-StringUtil.Tpo -c -o libAltSplicing_a-StringUtil.o `test -f 'util/StringUtil.cpp' || echo '$(srcdir)/'`util/StringUtil.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-StringUtil.Tpo $(DEPDIR)/libAltSplicing_a-StringUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/StringUtil.cpp' object='libAltSplicing_a-StringUtil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-StringUtil.o `test -f 'util/StringUtil.cpp' || echo '$(srcdir)/'`util/StringUtil.cpp

libAltSplicing_a-StringUtil.obj: util/StringUtil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-StringUtil.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-StringUtil.Tpo -c -o libAltSplicing_a-StringUtil.obj `if test -f 'util/StringUtil.cpp'; then $(CYGPATH_W) 'util/StringUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/util/StringUtil.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-StringUtil.Tpo $(DEPDIR)/libAltSplicing_a-StringUtil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/StringUtil.cpp' object='libAltSplicing_a-StringUtil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-StringUtil.obj `if test -f 'util/StringUtil.cpp'; then $(CYGPATH_W) 'util/StringUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/util/StringUtil.cpp'; fi`

libAltSplicing_a-Logger.o: util/Logger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-Logger.o -MD -MP -MF $(DEPDIR)/libAltSplicing_a-Logger.Tpo -c -o libAltSplicing_a-Logger.o `test -f 'util/Logger.cpp' || echo '$(srcdir)/'`util/Logger.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-Logger.Tpo $(DEPDIR)/libAltSplicing_a-Logger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/Logger.cpp' object='libAltSplicing_a-Logger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-Logger.o `test -f 'util/Logger.cpp' || echo '$(srcdir)/'`util/Logger.cpp

libAltSplicing_a-Logger.obj: util/Logger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libAltSplicing_a-Logger.obj -MD -MP -MF $(DEPDIR)/libAltSplicing_a-Logger.Tpo -c -o libAltSplicing_a-Logger.obj `if test -f 'util/Logger.cpp'; then $(CYGPATH_W) 'util/Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/util/Logger.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libAltSplicing_a-Logger.Tpo $(DEPDIR)/libAltSplicing_a-Logger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/Logger.cpp' object='libAltSplicing_a-Logger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libAltSplicing_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libAltSplicing_a-Logger.obj `if test -f 'util/Logger.cpp'; then $(CYGPATH_W) 'util/Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/util/Logger.cpp'; fi`

altSpliceFinder-Main.o: Main.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(altSpliceFinder_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT altSpliceFinder-Main.o -MD -MP -MF $(DEPDIR)/altSpliceFinder-Main.Tpo -c -o altSpliceFinder-Main.o `test -f 'Main.cpp' || echo '$(srcdir)/'`Main.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/altSpliceFinder-Main.Tpo $(DEPDIR)/altSpliceFinder-Main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Main.cpp' object='altSpliceFinder-Main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(altSpliceFinder_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o altSpliceFinder-Main.o `test -f 'Main.cpp' || echo '$(srcdir)/'`Main.cpp

altSpliceFinder-Main.obj: Main.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(altSpliceFinder_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT altSpliceFinder-Main.obj -MD -MP -MF $(DEPDIR)/altSpliceFinder-Main.Tpo -c -o altSpliceFinder-Main.obj `if test -f 'Main.cpp'; then $(CYGPATH_W) 'Main.cpp'; else $(CYGPATH_W) '$(srcdir)/Main.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/altSpliceFinder-Main.Tpo $(DEPDIR)/altSpliceFinder-Main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Main.cpp' object='altSpliceFinder-Main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(altSpliceFinder_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o altSpliceFinder-Main.obj `if test -f 'Main.cpp'; then $(CYGPATH_W) 'Main.cpp'; else $(CYGPATH_W) '$(srcdir)/Main.cpp'; fi`
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLIBRARIES uninstall-pkgincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
